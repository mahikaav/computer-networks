// Q) Write a C/C++ program to generate the codeword using CRC error detection method.

#include <iostream>
#include <cstring>

using namespace std;

#define N strlen(gen_poly)

void XOR(char check_value[], const char gen_poly[]) {
    for (int j = 1; j < N; j++) {
        check_value[j] = (check_value[j] == gen_poly[j]) ? '0' : '1';
    }
}

void receiver(const char gen_poly[]) {
    char data[28];
    char check_value[28];

    cout << "Enter the received data: ";
    cin >> data;
    cout << "\n";
    int data_length = strlen(data) - (N - 1); 
    int i = 0;
    for (i = 0; i < N; i++) {
        check_value[i] = data[i];
    }
    do {
        if (check_value[0] == '1') {
            XOR(check_value, gen_poly);
        }
        for (int j = 0; j < N - 1; j++) {
            check_value[j] = check_value[j + 1];
        }
        check_value[N - 1] = data[i++];
    } while (i <= data_length + N - 1);
    for (i = 0; i < N - 1 && check_value[i] != '1'; i++);
    if (i < N - 1) {
        cout << "\nError detected.\n";
    } else {
        cout << "\nNo error detected.\n";
    }
}
int main() {
    char data[28];
    char gen_poly[10];
    cout << "Enter data to be transmitted: ";
    cin >> data;

    cout << "\nEnter the Generating polynomial: ";
    cin >> gen_poly;

    int data_length = strlen(data);
    int i = 0;
    for (i = data_length; i < data_length + N - 1; i++) {
        data[i] = '0';
    }
    data[i] = '\0';
    cout << "\n";
    cout << "Number of divisor bits: " << N << endl;
    cout << "Number of zero bits added: " << N - 1 << endl;
    cout << "Data padded with " << strlen(gen_poly) - 1 << " zeros: " << data << endl;
    cout << "Number of dividend bits: " << strlen(data) << endl;
    char check_value[28];
    for (i = 0; i < N; i++) {
        check_value[i] = data[i];
    }
    do {
        if (check_value[0] == '1') {
            XOR(check_value, gen_poly);
        }

        for (int j = 0; j < N - 1; j++) {
            check_value[j] = check_value[j + 1];
        }

        check_value[N - 1] = data[i++];
    } while (i <= data_length + N - 1);
    cout << "CRC or Check value is: " << check_value;
    for (i = data_length; i < data_length + N - 1; i++) {
        data[i] = check_value[i - data_length];
    }

    for (i = data_length; i < data_length + N - 1; i++) {
        data[i] = check_value[i - data_length];
    }
    data[i] = '\0';
    cout << "\n";
    cout << "Final data to be sent: " << data;
    cout << "\n";
    receiver(gen_poly);
    return 0;
}
