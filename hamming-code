Q) Write a C/C++ program to find the single bit error correction detection using Hamming code method

#include <cstdlib>
#include <iostream>
#include <math.h>

using namespace std;

int main(int argc, char** argv) {

    int data_bits[20],m,r = 0,parity;    
    
    cout<<"Enter the size of data bits: ";
    cin>>m;
    cout << "\nNumber of message bits is " << m << endl;
    
    while(pow (2,r) < m + r + 1){
        r++;
    }
    
    cout<<"Enter the data bit: ";
    for(int i = 1; i <= m; i++)
        cin>>data_bits[i];
    cout << "Number of parity bits is " << r << endl;
    int hamming[m + r],j = 0,k = 1;    
    
    
    for(int i = 1; i <= m + r; i++){
        
        if( i == pow( 2, j )){
            hamming[i] = -1;    
            j++;
        }
        else{
            hamming[i] = data_bits[k];
            k++;
        }
    }
    
    k = 0;
    int x, min, max = 0;
    
    for (int i = 1; i <= m + r; i = pow (2, k)){
      k++;
      parity = 0;
      j = i;
      x = i;
      min = 1;
      max = i;
       while ( j <= m + r){
          for (x = j; max >= min && x <= m + r; min++, x++){
              if (hamming[x] == 1)
                  parity = parity + 1;;
          }
          j = x + i;
          min = 1;
      }
      
      //checking for even parity
      if (parity % 2 == 0){ 
         hamming[i] = 0;
      }
      else{
        hamming[i] = 1;
      }
  }
    
    cout<<"\nHamming code is: ";
    for(int i = 1; i <= m + r; i++)
        cout<<hamming[i]<<" ";
    cout << "\nEnter received bits: ";
    int rec[m+r+1];
    for (int i=1;i<m+r+1;i++){
        cin >> rec[i];
    }
    bool err = false;
    for (int i=1;i<m+r+1;i++){
        if (hamming[i]!=rec[i]){
            cout << "Error found at " << i << " position" <<endl;
            err = true;
            break;
        }
    }
    if (err == false){
        cout << "No error detected" << endl;
    }
    return 0;
}
